"""Add communities tables

Revision ID: 005
Revises: 004
Create Date: 2024-12-14 14:39:39.967209

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '005'
down_revision = '004'
branch_labels = None
depends_on = None


def upgrade():
    op.create_table(
        'community',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=120), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'community_members',
        sa.Column('community_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('community_id', 'user_id')
    )
    with op.batch_alter_table('data_set', schema=None) as batch_op:
        batch_op.add_column(sa.Column('community_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'community', ['community_id'], ['id'])
    # ### commands auto generated by Alembic - please adjust! ###
    with op.ce('community', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.alter_column(
            'name',
            existing_type=mysql.VARCHAR(length=100),
            type_=sa.String(length=120),
            existing_nullable=False)
        batch_op.alter_column(
            'description',
            existing_type=mysql.TEXT(),
            nullable=False)
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.create_foreign_key(None, 'user', ['owner_id'], ['id'])

    with op.batch_alter_table('data_set', schema=None) as batch_op:
        batch_op.add_column(sa.Column('community_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'community', ['community_id'], ['id'])
        batch_op.drop_column('publico')

    with op.batch_alter_table('deposition', schema=None) as batch_op:
        batch_op.add_column(sa.Column('meta_data', sa.JSON(), nullable=False))
        batch_op.drop_column('dep_metadata')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table('community', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column(
            'description',
            existing_type=mysql.TEXT(),
            nullable=True)
        batch_op.alter_column(
            'name',
            existing_type=sa.String(length=120),
            type_=mysql.VARCHAR(length=100),
            existing_nullable=False)

    # ### end Alembic commands ###
